---
import { Image } from "astro:assets";
import mor from "public/assets/logomorcircles.png";
import HeroImage from "~/components/hero-image.astro";
import Starfield from "~/components/starfield.astro";
import GitHubCorner from "./github-corner.astro";

const widths = [450, 800];
const sizes = "(min-width: 640px) 42vw, 67vw";

interface Props {
  typewriter?: boolean;
  icon?: ImageMetadata;
  bar?: boolean;
  animation?: boolean;
}

const { icon = mor, typewriter = true, animation = true } = Astro.props;
---

<section class="relative h-full bg-black">
  <Starfield />
  <GitHubCorner />
  <div id="splash-bg-fallback" class="absolute inset-0 hidden opacity-40">
    <HeroImage />
  </div>
  <div class="relative grid h-full place-items-center sm:grid-cols-2">
    <h2
      class="flex w-full flex-col items-center gap-2 self-end sm:gap-4 sm:self-auto sm:justify-self-end"
    >
      <div
        class="jetbrains-mono-800 gradient-text text-center font-bold tracking-tighter text-5xl md:text-6xl"
      >
        <slot />
      </div>
      {
        typewriter === true && (
          <div class="jetbrains-mono-300 animation text-center tracking-tighter text-white text-lg md:text-lg">
            therefore excellence is not an act, but a{" "}
            <>
              <span id="typewriter" />
              <span id="cursor">|</span>
            </>
          </div>
        )
      }
    </h2>

    <div
      id={animation ? "astronaut" : undefined}
      class={`w-2/3 max-w-3xl self-start sm:w-10/12 sm:self-auto sm:justify-self-start ${animation ? "astronaut" : ""}`}
    >
      <Image
        class="h-full w-full object-cover"
        src={icon}
        widths={widths}
        sizes={sizes}
        loading="eager"
        alt="A circular logo"
      />
    </div>
  </div>
</section>

<noscript>
  <style>
    #splash-bg-fallback {
      display: block;
    }
  </style>
</noscript>
<style>
  @keyframes breathe {
    0%,
    100% {
      transform: scale(0.6);
    }

    50% {
      transform: scale(0.7);
    }
  }

  #astronaut {
    animation: breathe ease-in-out 5s infinite;
  }

  @media (prefers-reduced-motion: reduce) {
    #astronaut {
      @apply animate-none;
    }

    :global(#starfield) {
      @apply hidden;
    }

    #splash-bg-fallback {
      @apply block;
    }
  }

  #typewriter {
  }
  #cursor {
    color: white;
    animation: blink 1s linear infinite;
  }

  @keyframes blink {
    0% {
      opacity: 100%;
    }
    50% {
      opacity: 0%;
    }
  }
</style>

<script>
  function sleep(ms: any) {
    return new Promise((resolve) => setTimeout(resolve, ms));
  }

  const phrases = ["habit", "routine", "practice", "custom"];
  const el = document.getElementById("typewriter");

  let sleepTime = 100;

  let curPhraseIndex = 0;

  const writeLoop = async () => {
    while (true) {
      let curWord = phrases[curPhraseIndex];

      for (let i = 0; i < curWord.length; i++) {
        el!.innerText = curWord.substring(0, i + 1);
        await sleep(sleepTime);
      }

      await sleep(sleepTime * 10);

      for (let i = curWord.length; i > 0; i--) {
        el!.innerText = curWord.substring(0, i - 1);
        await sleep(sleepTime);
      }

      await sleep(sleepTime * 5);

      if (curPhraseIndex === phrases.length - 1) {
        curPhraseIndex = 0;
      } else {
        curPhraseIndex++;
      }
    }
  };

  writeLoop();
</script>
